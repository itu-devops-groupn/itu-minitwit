---
# The workflow is adapted from the following guide:
# https://github.com/itu-devops/itu-minitwit-ci/blob/master/README.md
name: Continuous Deployment

on:
  workflow_run:
    workflows: ["Autorelease"]
    types:
      - completed
  # allow manual triggers for now too
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get latest Git tag
        id: latest_tag
        run: echo "tag=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_ENV

      - name: Build and push Minitwit-web image
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile-web
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/minitwit-web:${{ env.tag }}, ${{ secrets.DOCKER_USERNAME }}/minitwit-web

      - name: Build and push Minitwit-api image
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile-api
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/minitwit-api:${{ env.tag }}, ${{ secrets.DOCKER_USERNAME }}/minitwit-api

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/do_ssh_key
          chmod 600 ~/.ssh/do_ssh_key
        env:
           SSH_KEY: ${{ secrets.SSH_KEY }}
      
      - name: Ensure /vagrant directory is created on remote server
        run: |
          ssh "$SSH_USER@$SSH_HOST" -i ~/.ssh/do_ssh_key -o StrictHostKeyChecking=no "mkdir -p /vagrant"
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: Copy files to /vagrant directory on remote server
        run: |
          scp -i ~/.ssh/do_ssh_key -o StrictHostKeyChecking=no -r remote_files/* "$SSH_USER@$SSH_HOST:/vagrant"
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          
      - name: Deploy to server
        # Configure the ~./bash_profile and deploy.sh file on the Vagrantfile
        run: >
          ssh "$SSH_USER@$SSH_HOST" -i ~/.ssh/do_ssh_key -o StrictHostKeyChecking=no "/vagrant/deploy.sh"
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
